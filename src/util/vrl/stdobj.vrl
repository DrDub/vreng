struct Wall {
	var x, y, z, angle ;
	var lx, ly, lz ;

	var tex_xp, tex_xn, tex_yp, tex_yn, tex_zp, tex_zn ;
	var diffuseRED, diffuseGREEN, diffuseBLUE ;
	var ambienteRED, ambienteGREEN, ambienteBLUE ;
	var specular1, specular2, specular3 ;
	var shininess1, shininess2, shininess3 ;

	constructor(x0, y0, z0, angle0, lx0, ly0, lz0) {
		x = x0 ;
		y = y0 ;
		z = z0 ;
                angle = angle0;
		lx = lx0 ;
		ly = ly0 ;
		lz = lz0 ;
	}
}

struct Gate {
	var xPos, yPos, zPos, angle ;
	var lx, ly, lz ;
        var where2go, ipMulti;

	var tex_xp, tex_xn, tex_yp, tex_yn, tex_zp, tex_zn ;
	var diffuseRED, diffuseGREEN, diffuseBLUE ;
	var ambienteRED, ambienteGREEN, ambienteBLUE ;
	var specular1, specular2, specular3 ;
	var shininess1, shininess2, shininess3 ;

	constructor(px, py, pz, pangle, plx, ply, plz, pwhere, pip) {
        // names starting 'p' = parameters
		xPos = px ;
		xyPos= py ;
		zPos = pz ;
                angle = pangle;
		lx = plx ;
		ly = ply ;
		lz = plz ;
                where2go = pwhere;
                ipMulti = pip;
	}
}

struct Web {
	var xPos, yPos, zPos, angle ;
	var lx, ly, lz ;
        var url2load;

	var tex_xp, tex_xn, tex_yp, tex_yn, tex_zp, tex_zn ;
	var diffuseRED, diffuseGREEN, diffuseBLUE ;
	var ambienteRED, ambienteGREEN, ambienteBLUE ;
	var specular1, specular2, specular3 ;
	var shininess1, shininess2, shininess3 ;

	constructor(px, py, pz, pangle, plx, ply, plz, purl) {
        // names starting 'p' = parameters
		xPos = px ;
		xyPos= py ;
		zPos = pz ;
                angle = pangle;
		lx = plx ;
		ly = ply ;
		lz = plz ;
                url2load = purl;
	}
}

struct Board {
	var xPos, yPos, zPos, angle ;
	var lx, ly, lz ;

	var tex_xp, tex_xn, tex_yp, tex_yn, tex_zp, tex_zn ;
	var diffuseRED, diffuseGREEN, diffuseBLUE ;
	var ambienteRED, ambienteGREEN, ambienteBLUE ;
	var specular1, specular2, specular3 ;
	var shininess1, shininess2, shininess3 ;

	constructor(px, py, pz, pangle, plx, ply, plz) {
        // names starting 'p' = parameters
		xPos = px ;
		xyPos= py ;
		zPos = pz ;
                angle = pangle;
		lx = plx ;
		ly = ply ;
		lz = plz ;
	}
}

struct Host {
	var xPos, yPos, zPos, angle ;
	var lx, ly, lz ;
        var telnet2open;

	var tex_xp, tex_xn, tex_yp, tex_yn, tex_zp, tex_zn ;
	var diffuseRED, diffuseGREEN, diffuseBLUE ;
	var ambienteRED, ambienteGREEN, ambienteBLUE ;
	var specular1, specular2, specular3 ;
	var shininess1, shininess2, shininess3 ;

	constructor(px, py, pz, pangle, plx, ply, plz, ptelnet) {
        // names starting 'p' = parameters
		xPos = px ;
		xyPos= py ;
		zPos = pz ;
                angle = pangle;
		lx = plx ;
		ly = ply ;
		lz = plz ;
                telnet2open = ptelnet;
	}
}

struct Doc {
	var xPos, yPos, zPos, angle ;
	var lx, ly, lz ;
        var doc2open;

	var tex_xp, tex_xn, tex_yp, tex_yn, tex_zp, tex_zn ;
	var diffuseRED, diffuseGREEN, diffuseBLUE ;
	var ambienteRED, ambienteGREEN, ambienteBLUE ;
	var specular1, specular2, specular3 ;
	var shininess1, shininess2, shininess3 ;

	constructor(px, py, pz, pangle, plx, ply, plz, pdoc) {
        // names starting 'p' = parameters
		xPos = px ;
		xyPos= py ;
		zPos = pz ;
                angle = pangle;
		lx = plx ;
		ly = ply ;
		lz = plz ;
                doc2open = pdoc;
	}
}

struct Cauldron {
	var xPos, yPos, zPos ;
        var radius, radius2;

	var tex_xp, tex_xn, tex_yp, tex_yn, tex_zp, tex_zn ;
	var diffuseRED, diffuseGREEN, diffuseBLUE ;
	var ambienteRED, ambienteGREEN, ambienteBLUE ;
	var specular1, specular2, specular3 ;
	var shininess1, shininess2, shininess3 ;

	constructor(px, py, pz, pr, pr2) {
        // names starting 'p' = parameters
		xPos = px ;
		xyPos= py ;
		zPos = pz ;
                angle = pangle;
                radius = pr;
                radius2 = pr2;
	}
}

struct Step {
	var xPos, yPos, zPos, angle ;
	var lx, ly, lz ;

	var tex_xp, tex_xn, tex_yp, tex_yn, tex_zp, tex_zn ;
	var diffuseRED, diffuseGREEN, diffuseBLUE ;
	var ambienteRED, ambienteGREEN, ambienteBLUE ;
	var specular1, specular2, specular3 ;
	var shininess1, shininess2, shininess3 ;

	constructor(px, py, pz, pangle, plx, ply, plz) {
        // names starting 'p' = parameters
		xPos = px ;
		xyPos= py ;
		zPos = pz ;
                angle = pangle;
		lx = plx ;
		ly = ply ;
		lz = plz ;
	}
}

struct Aoi {
	var xPos, yPos, zPos, angle ;
	var lx, ly, lz ;
        var ipMulti;

	var tex_xp, tex_xn, tex_yp, tex_yn, tex_zp, tex_zn ;
	var diffuseRED, diffuseGREEN, diffuseBLUE ;
	var ambienteRED, ambienteGREEN, ambienteBLUE ;
	var specular1, specular2, specular3 ;
	var shininess1, shininess2, shininess3 ;

	constructor(px, py, pz, pangle, plx, ply, plz, pIp) {
        // names starting 'p' = parameters
		xPos = px ;
		xyPos= py ;
		zPos = pz ;
                angle = pangle;
		lx = plx ;
		ly = ply ;
		lz = plz ;
                ipMulti = pIp;
	}
}

struct Walls {
	var configFile;

	constructor( pFile) {
		configFile = pFile ;
	}
}

struct Door {
        var doorName;
	var xPos, yPos, zPos, angle ;
        var angleOpened, angleClosed, speed, xOffset, sid, iod;
	var halflengtX, halflengthY, halflengthZ ;

	var tex_xp, tex_xn, tex_yp, tex_yn, tex_zp, tex_zn ;
	var diffuseRED, diffuseGREEN, diffuseBLUE ;
	var ambienteRED, ambienteGREEN, ambienteBLUE ;
	var shininess1, shininess2, shininess3 ;
	var specular1, specular2, specular3 ;

        constructor(name, x, y, z, a, lx, ly, lz, 
                           angO, angC, sp, xOff, psid, poid) {
                doorName = name;
  		xPos = x;  yPos = y;  zPos = z;  angle = a;
                angleOpened = angO;   angleClosed = angC;
                speed = sp;           xOffset = xOff;
                iod = poid; sid = psid;
                halflengthX = lx;
                halflengthY = ly;
                halflengthZ = lz;
        }
}

struct Mirage {
	var xPos, yPos, zPos, aZ, aX ;
	var lx, ly, lz ;

	var tex_xp, tex_xn, tex_yp, tex_yn, tex_zp, tex_zn ;
	var diffuseRED, diffuseGREEN, diffuseBLUE ;
	var ambienteRED, ambienteGREEN, ambienteBLUE ;
	var specular1, specular2, specular3 ;
	var shininess1, shininess2, shininess3 ;

	constructor(px, py, pz, paz, pax, plx, ply, plz) {
        // names starting 'p' = parameters
		xPos = px ;
		xyPos= py ;
		zPos = pz ;
                aZ = paz;
                aX = pax;
		lx = plx ;
		ly = ply ;
		lz = plz ;
	}
}
