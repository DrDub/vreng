Terminals unused in grammar

   THIS


Grammar

    0 $accept: PROGRAMME $end

    1 PROGRAMME: VIDE
    2          | PROGRAMME IMPORT CHAINE
    3          | PROGRAMME DECLARATION_VAR
    4          | PROGRAMME DECLARATION_CLASSE
    5          | PROGRAMME BEGINKEY ACCOUVR DECLARATION_VAR_LISTE INSTRUCTION_LISTE ACCFERM END

    6 DECLARATION_VAR: VAR VARIABLE PTVIRG
    7                | VAR VARIABLE EGAL DATA PTVIRG

    8 DECLARATION_VAR_LISTE: VIDE
    9                      | DECLARATION_VAR_LISTE DECLARATION_VAR

   10 DECLARATION_CLASSE: CLASSE NOM EXTENDS NOM ACCOUVR AFFECTATION_CLASSE_LISTE ACCFERM
   11                   | CLASSE NOM COMPOUND ACCOUVR DECLARATION_VAR_LISTE DEFINITION_CLASSE ACCFERM

   12 DEFINITION_CLASSE: VIDE
   13                  | DEFINITION_CLASSE CONSTRUCTEUR

   14 CONSTRUCTEUR: CONSTRUCTOR PARENTOUVR NOMS PARENTFERM ACCOUVR DECLARATION_VAR_LISTE INSTRUCTION_LISTE ACCFERM

   15 AFFECTATION_CLASSE_LISTE: VIDE
   16                         | AFFECTATION_CLASSE_LISTE AFFECTATION

   17 INSTRUCTION_LISTE: VIDE
   18                  | INSTRUCTION_LISTE INSTRUCTION

   19 INSTRUCTION: AFFECTATION
   20            | WHILE PARENTOUVR TEST PARENTFERM CONSEQUENCE
   21            | INSTRUCTION_IF
   22            | NEW NOM PARENTOUVR DATALISTE PARENTFERM PTVIRG
   23            | VARIABLE EGAL NEW NOM PARENTOUVR DATALISTE PARENTFERM PTVIRG

   24 INSTRUCTION_IF: IF PARENTOUVR TEST PARENTFERM CONSEQUENCE ELSE CONSEQUENCE
   25               | IF PARENTOUVR TEST PARENTFERM CONSEQUENCE

   26 CONSEQUENCE: ACCOUVR INSTRUCTION_LISTE ACCFERM

   27 AFFECTATION: VARIABLE EGAL DATA PTVIRG
   28            | NOM POINT NOM EGAL DATA PTVIRG

   29 DATA: VARIABLE
   30     | NOMBRE
   31     | CHAINE
   32     | PARENTOUVR DATA PARENTFERM
   33     | OPERATION
   34     | TRUE
   35     | FALSE

   36 OPERATION: DATA PLUS DATA
   37          | DATA MOINS DATA
   38          | DATA MULT DATA
   39          | DATA DIV DATA
   40          | DATA MOD DATA
   41          | ABS PARENTOUVR DATA PARENTFERM
   42          | MOINS DATA

   43 TEST: COMPARAISON
   44     | PARENTOUVR COMPARAISON PARENTFERM
   45     | TEST AND TEST
   46     | TEST OR TEST
   47     | NOT TEST
   48     | FALSE
   49     | TRUE
   50     | VARIABLE

   51 COMPARAISON: DATA EGALEGAL DATA
   52            | DATA SUP DATA
   53            | DATA INF DATA
   54            | DATA SUPEGAL DATA
   55            | DATA INFEGAL DATA
   56            | DATA DIFFERENT DATA

   57 VARIABLE: NOM
   58         | NOM CROCHOUVR DATA CROCHFERM

   59 NOMS: VIDE
   60     | NOM
   61     | NOMS VIRGULE NOM

   62 DATALISTE: VIDE
   63          | DATA
   64          | DATALISTE VIRGULE DATA

   65 NOMBRE: ENTIER
   66       | REEL

   67 VIDE: %empty


Terminals, with rules where they appear

$end (0) 0
error (256)
ENTIER (258) 65
REEL (259) 66
NOM (260) 10 11 22 23 28 57 58 60 61
CHAINE (261) 2 31
TRUE (262) 34 49
FALSE (263) 35 48
VAR (264) 6 7
BEGINKEY (265) 5
END (266) 5
IMPORT (267) 2
IF (268) 24 25
ELSE (269) 24
WHILE (270) 20
NEW (271) 22 23
COMPOUND (272) 11
CLASSE (273) 10 11
EXTENDS (274) 10
CONSTRUCTOR (275) 14
THIS (276)
NOT (277) 47
AND (278) 45
OR (279) 46
EGAL (280) 7 23 27 28
PLUS (281) 36
MOINS (282) 37 42
MULT (283) 38
DIV (284) 39
MOD (285) 40
ABS (286) 41
SUP (287) 52
INF (288) 53
SUPEGAL (289) 54
INFEGAL (290) 55
EGALEGAL (291) 51
DIFFERENT (292) 56
PARENTOUVR (293) 14 20 22 23 24 25 32 41 44
PARENTFERM (294) 14 20 22 23 24 25 32 41 44
CROCHOUVR (295) 58
CROCHFERM (296) 58
ACCOUVR (297) 5 10 11 14 26
ACCFERM (298) 5 10 11 14 26
PTVIRG (299) 6 7 22 23 27 28
VIRGULE (300) 61 64
POINT (301) 28


Nonterminals, with rules where they appear

$accept (47)
    on left: 0
PROGRAMME (48)
    on left: 1 2 3 4 5, on right: 0 2 3 4 5
DECLARATION_VAR (49)
    on left: 6 7, on right: 3 9
DECLARATION_VAR_LISTE (50)
    on left: 8 9, on right: 5 9 11 14
DECLARATION_CLASSE (51)
    on left: 10 11, on right: 4
DEFINITION_CLASSE (52)
    on left: 12 13, on right: 11 13
CONSTRUCTEUR (53)
    on left: 14, on right: 13
AFFECTATION_CLASSE_LISTE (54)
    on left: 15 16, on right: 10 16
INSTRUCTION_LISTE (55)
    on left: 17 18, on right: 5 14 18 26
INSTRUCTION (56)
    on left: 19 20 21 22 23, on right: 18
INSTRUCTION_IF (57)
    on left: 24 25, on right: 21
CONSEQUENCE (58)
    on left: 26, on right: 20 24 25
AFFECTATION (59)
    on left: 27 28, on right: 16 19
DATA (60)
    on left: 29 30 31 32 33 34 35, on right: 7 27 28 32 36 37 38 39
    40 41 42 51 52 53 54 55 56 58 63 64
OPERATION (61)
    on left: 36 37 38 39 40 41 42, on right: 33
TEST (62)
    on left: 43 44 45 46 47 48 49 50, on right: 20 24 25 45 46 47
COMPARAISON (63)
    on left: 51 52 53 54 55 56, on right: 43 44
VARIABLE (64)
    on left: 57 58, on right: 6 7 23 27 29 50
NOMS (65)
    on left: 59 60 61, on right: 14 61
DATALISTE (66)
    on left: 62 63 64, on right: 22 23 64
NOMBRE (67)
    on left: 65 66, on right: 30
VIDE (68)
    on left: 67, on right: 1 8 12 15 17 59 62


State 0

    0 $accept: . PROGRAMME $end

    $default  reduce using rule 67 (VIDE)

    PROGRAMME  go to state 1
    VIDE       go to state 2


State 1

    0 $accept: PROGRAMME . $end
    2 PROGRAMME: PROGRAMME . IMPORT CHAINE
    3          | PROGRAMME . DECLARATION_VAR
    4          | PROGRAMME . DECLARATION_CLASSE
    5          | PROGRAMME . BEGINKEY ACCOUVR DECLARATION_VAR_LISTE INSTRUCTION_LISTE ACCFERM END

    $end      shift, and go to state 3
    VAR       shift, and go to state 4
    BEGINKEY  shift, and go to state 5
    IMPORT    shift, and go to state 6
    CLASSE    shift, and go to state 7

    DECLARATION_VAR     go to state 8
    DECLARATION_CLASSE  go to state 9


State 2

    1 PROGRAMME: VIDE .

    $default  reduce using rule 1 (PROGRAMME)


State 3

    0 $accept: PROGRAMME $end .

    $default  accept


State 4

    6 DECLARATION_VAR: VAR . VARIABLE PTVIRG
    7                | VAR . VARIABLE EGAL DATA PTVIRG

    NOM  shift, and go to state 10

    VARIABLE  go to state 11


State 5

    5 PROGRAMME: PROGRAMME BEGINKEY . ACCOUVR DECLARATION_VAR_LISTE INSTRUCTION_LISTE ACCFERM END

    ACCOUVR  shift, and go to state 12


State 6

    2 PROGRAMME: PROGRAMME IMPORT . CHAINE

    CHAINE  shift, and go to state 13


State 7

   10 DECLARATION_CLASSE: CLASSE . NOM EXTENDS NOM ACCOUVR AFFECTATION_CLASSE_LISTE ACCFERM
   11                   | CLASSE . NOM COMPOUND ACCOUVR DECLARATION_VAR_LISTE DEFINITION_CLASSE ACCFERM

    NOM  shift, and go to state 14


State 8

    3 PROGRAMME: PROGRAMME DECLARATION_VAR .

    $default  reduce using rule 3 (PROGRAMME)


State 9

    4 PROGRAMME: PROGRAMME DECLARATION_CLASSE .

    $default  reduce using rule 4 (PROGRAMME)


State 10

   57 VARIABLE: NOM .
   58         | NOM . CROCHOUVR DATA CROCHFERM

    CROCHOUVR  shift, and go to state 15

    $default  reduce using rule 57 (VARIABLE)


State 11

    6 DECLARATION_VAR: VAR VARIABLE . PTVIRG
    7                | VAR VARIABLE . EGAL DATA PTVIRG

    EGAL    shift, and go to state 16
    PTVIRG  shift, and go to state 17


State 12

    5 PROGRAMME: PROGRAMME BEGINKEY ACCOUVR . DECLARATION_VAR_LISTE INSTRUCTION_LISTE ACCFERM END

    $default  reduce using rule 67 (VIDE)

    DECLARATION_VAR_LISTE  go to state 18
    VIDE                   go to state 19


State 13

    2 PROGRAMME: PROGRAMME IMPORT CHAINE .

    $default  reduce using rule 2 (PROGRAMME)


State 14

   10 DECLARATION_CLASSE: CLASSE NOM . EXTENDS NOM ACCOUVR AFFECTATION_CLASSE_LISTE ACCFERM
   11                   | CLASSE NOM . COMPOUND ACCOUVR DECLARATION_VAR_LISTE DEFINITION_CLASSE ACCFERM

    COMPOUND  shift, and go to state 20
    EXTENDS   shift, and go to state 21


State 15

   58 VARIABLE: NOM CROCHOUVR . DATA CROCHFERM

    ENTIER      shift, and go to state 22
    REEL        shift, and go to state 23
    NOM         shift, and go to state 10
    CHAINE      shift, and go to state 24
    TRUE        shift, and go to state 25
    FALSE       shift, and go to state 26
    MOINS       shift, and go to state 27
    ABS         shift, and go to state 28
    PARENTOUVR  shift, and go to state 29

    DATA       go to state 30
    OPERATION  go to state 31
    VARIABLE   go to state 32
    NOMBRE     go to state 33


State 16

    7 DECLARATION_VAR: VAR VARIABLE EGAL . DATA PTVIRG

    ENTIER      shift, and go to state 22
    REEL        shift, and go to state 23
    NOM         shift, and go to state 10
    CHAINE      shift, and go to state 24
    TRUE        shift, and go to state 25
    FALSE       shift, and go to state 26
    MOINS       shift, and go to state 27
    ABS         shift, and go to state 28
    PARENTOUVR  shift, and go to state 29

    DATA       go to state 34
    OPERATION  go to state 31
    VARIABLE   go to state 32
    NOMBRE     go to state 33


State 17

    6 DECLARATION_VAR: VAR VARIABLE PTVIRG .

    $default  reduce using rule 6 (DECLARATION_VAR)


State 18

    5 PROGRAMME: PROGRAMME BEGINKEY ACCOUVR DECLARATION_VAR_LISTE . INSTRUCTION_LISTE ACCFERM END
    9 DECLARATION_VAR_LISTE: DECLARATION_VAR_LISTE . DECLARATION_VAR

    VAR  shift, and go to state 4

    $default  reduce using rule 67 (VIDE)

    DECLARATION_VAR    go to state 35
    INSTRUCTION_LISTE  go to state 36
    VIDE               go to state 37


State 19

    8 DECLARATION_VAR_LISTE: VIDE .

    $default  reduce using rule 8 (DECLARATION_VAR_LISTE)


State 20

   11 DECLARATION_CLASSE: CLASSE NOM COMPOUND . ACCOUVR DECLARATION_VAR_LISTE DEFINITION_CLASSE ACCFERM

    ACCOUVR  shift, and go to state 38


State 21

   10 DECLARATION_CLASSE: CLASSE NOM EXTENDS . NOM ACCOUVR AFFECTATION_CLASSE_LISTE ACCFERM

    NOM  shift, and go to state 39


State 22

   65 NOMBRE: ENTIER .

    $default  reduce using rule 65 (NOMBRE)


State 23

   66 NOMBRE: REEL .

    $default  reduce using rule 66 (NOMBRE)


State 24

   31 DATA: CHAINE .

    $default  reduce using rule 31 (DATA)


State 25

   34 DATA: TRUE .

    $default  reduce using rule 34 (DATA)


State 26

   35 DATA: FALSE .

    $default  reduce using rule 35 (DATA)


State 27

   42 OPERATION: MOINS . DATA

    ENTIER      shift, and go to state 22
    REEL        shift, and go to state 23
    NOM         shift, and go to state 10
    CHAINE      shift, and go to state 24
    TRUE        shift, and go to state 25
    FALSE       shift, and go to state 26
    MOINS       shift, and go to state 27
    ABS         shift, and go to state 28
    PARENTOUVR  shift, and go to state 29

    DATA       go to state 40
    OPERATION  go to state 31
    VARIABLE   go to state 32
    NOMBRE     go to state 33


State 28

   41 OPERATION: ABS . PARENTOUVR DATA PARENTFERM

    PARENTOUVR  shift, and go to state 41


State 29

   32 DATA: PARENTOUVR . DATA PARENTFERM

    ENTIER      shift, and go to state 22
    REEL        shift, and go to state 23
    NOM         shift, and go to state 10
    CHAINE      shift, and go to state 24
    TRUE        shift, and go to state 25
    FALSE       shift, and go to state 26
    MOINS       shift, and go to state 27
    ABS         shift, and go to state 28
    PARENTOUVR  shift, and go to state 29

    DATA       go to state 42
    OPERATION  go to state 31
    VARIABLE   go to state 32
    NOMBRE     go to state 33


State 30

   36 OPERATION: DATA . PLUS DATA
   37          | DATA . MOINS DATA
   38          | DATA . MULT DATA
   39          | DATA . DIV DATA
   40          | DATA . MOD DATA
   58 VARIABLE: NOM CROCHOUVR DATA . CROCHFERM

    PLUS       shift, and go to state 43
    MOINS      shift, and go to state 44
    MULT       shift, and go to state 45
    DIV        shift, and go to state 46
    MOD        shift, and go to state 47
    CROCHFERM  shift, and go to state 48


State 31

   33 DATA: OPERATION .

    $default  reduce using rule 33 (DATA)


State 32

   29 DATA: VARIABLE .

    $default  reduce using rule 29 (DATA)


State 33

   30 DATA: NOMBRE .

    $default  reduce using rule 30 (DATA)


State 34

    7 DECLARATION_VAR: VAR VARIABLE EGAL DATA . PTVIRG
   36 OPERATION: DATA . PLUS DATA
   37          | DATA . MOINS DATA
   38          | DATA . MULT DATA
   39          | DATA . DIV DATA
   40          | DATA . MOD DATA

    PLUS    shift, and go to state 43
    MOINS   shift, and go to state 44
    MULT    shift, and go to state 45
    DIV     shift, and go to state 46
    MOD     shift, and go to state 47
    PTVIRG  shift, and go to state 49


State 35

    9 DECLARATION_VAR_LISTE: DECLARATION_VAR_LISTE DECLARATION_VAR .

    $default  reduce using rule 9 (DECLARATION_VAR_LISTE)


State 36

    5 PROGRAMME: PROGRAMME BEGINKEY ACCOUVR DECLARATION_VAR_LISTE INSTRUCTION_LISTE . ACCFERM END
   18 INSTRUCTION_LISTE: INSTRUCTION_LISTE . INSTRUCTION

    NOM      shift, and go to state 50
    IF       shift, and go to state 51
    WHILE    shift, and go to state 52
    NEW      shift, and go to state 53
    ACCFERM  shift, and go to state 54

    INSTRUCTION     go to state 55
    INSTRUCTION_IF  go to state 56
    AFFECTATION     go to state 57
    VARIABLE        go to state 58


State 37

   17 INSTRUCTION_LISTE: VIDE .

    $default  reduce using rule 17 (INSTRUCTION_LISTE)


State 38

   11 DECLARATION_CLASSE: CLASSE NOM COMPOUND ACCOUVR . DECLARATION_VAR_LISTE DEFINITION_CLASSE ACCFERM

    $default  reduce using rule 67 (VIDE)

    DECLARATION_VAR_LISTE  go to state 59
    VIDE                   go to state 19


State 39

   10 DECLARATION_CLASSE: CLASSE NOM EXTENDS NOM . ACCOUVR AFFECTATION_CLASSE_LISTE ACCFERM

    ACCOUVR  shift, and go to state 60


State 40

   36 OPERATION: DATA . PLUS DATA
   37          | DATA . MOINS DATA
   38          | DATA . MULT DATA
   39          | DATA . DIV DATA
   40          | DATA . MOD DATA
   42          | MOINS DATA .

    $default  reduce using rule 42 (OPERATION)


State 41

   41 OPERATION: ABS PARENTOUVR . DATA PARENTFERM

    ENTIER      shift, and go to state 22
    REEL        shift, and go to state 23
    NOM         shift, and go to state 10
    CHAINE      shift, and go to state 24
    TRUE        shift, and go to state 25
    FALSE       shift, and go to state 26
    MOINS       shift, and go to state 27
    ABS         shift, and go to state 28
    PARENTOUVR  shift, and go to state 29

    DATA       go to state 61
    OPERATION  go to state 31
    VARIABLE   go to state 32
    NOMBRE     go to state 33


State 42

   32 DATA: PARENTOUVR DATA . PARENTFERM
   36 OPERATION: DATA . PLUS DATA
   37          | DATA . MOINS DATA
   38          | DATA . MULT DATA
   39          | DATA . DIV DATA
   40          | DATA . MOD DATA

    PLUS        shift, and go to state 43
    MOINS       shift, and go to state 44
    MULT        shift, and go to state 45
    DIV         shift, and go to state 46
    MOD         shift, and go to state 47
    PARENTFERM  shift, and go to state 62


State 43

   36 OPERATION: DATA PLUS . DATA

    ENTIER      shift, and go to state 22
    REEL        shift, and go to state 23
    NOM         shift, and go to state 10
    CHAINE      shift, and go to state 24
    TRUE        shift, and go to state 25
    FALSE       shift, and go to state 26
    MOINS       shift, and go to state 27
    ABS         shift, and go to state 28
    PARENTOUVR  shift, and go to state 29

    DATA       go to state 63
    OPERATION  go to state 31
    VARIABLE   go to state 32
    NOMBRE     go to state 33


State 44

   37 OPERATION: DATA MOINS . DATA

    ENTIER      shift, and go to state 22
    REEL        shift, and go to state 23
    NOM         shift, and go to state 10
    CHAINE      shift, and go to state 24
    TRUE        shift, and go to state 25
    FALSE       shift, and go to state 26
    MOINS       shift, and go to state 27
    ABS         shift, and go to state 28
    PARENTOUVR  shift, and go to state 29

    DATA       go to state 64
    OPERATION  go to state 31
    VARIABLE   go to state 32
    NOMBRE     go to state 33


State 45

   38 OPERATION: DATA MULT . DATA

    ENTIER      shift, and go to state 22
    REEL        shift, and go to state 23
    NOM         shift, and go to state 10
    CHAINE      shift, and go to state 24
    TRUE        shift, and go to state 25
    FALSE       shift, and go to state 26
    MOINS       shift, and go to state 27
    ABS         shift, and go to state 28
    PARENTOUVR  shift, and go to state 29

    DATA       go to state 65
    OPERATION  go to state 31
    VARIABLE   go to state 32
    NOMBRE     go to state 33


State 46

   39 OPERATION: DATA DIV . DATA

    ENTIER      shift, and go to state 22
    REEL        shift, and go to state 23
    NOM         shift, and go to state 10
    CHAINE      shift, and go to state 24
    TRUE        shift, and go to state 25
    FALSE       shift, and go to state 26
    MOINS       shift, and go to state 27
    ABS         shift, and go to state 28
    PARENTOUVR  shift, and go to state 29

    DATA       go to state 66
    OPERATION  go to state 31
    VARIABLE   go to state 32
    NOMBRE     go to state 33


State 47

   40 OPERATION: DATA MOD . DATA

    ENTIER      shift, and go to state 22
    REEL        shift, and go to state 23
    NOM         shift, and go to state 10
    CHAINE      shift, and go to state 24
    TRUE        shift, and go to state 25
    FALSE       shift, and go to state 26
    MOINS       shift, and go to state 27
    ABS         shift, and go to state 28
    PARENTOUVR  shift, and go to state 29

    DATA       go to state 67
    OPERATION  go to state 31
    VARIABLE   go to state 32
    NOMBRE     go to state 33


State 48

   58 VARIABLE: NOM CROCHOUVR DATA CROCHFERM .

    $default  reduce using rule 58 (VARIABLE)


State 49

    7 DECLARATION_VAR: VAR VARIABLE EGAL DATA PTVIRG .

    $default  reduce using rule 7 (DECLARATION_VAR)


State 50

   28 AFFECTATION: NOM . POINT NOM EGAL DATA PTVIRG
   57 VARIABLE: NOM .
   58         | NOM . CROCHOUVR DATA CROCHFERM

    CROCHOUVR  shift, and go to state 15
    POINT      shift, and go to state 68

    $default  reduce using rule 57 (VARIABLE)


State 51

   24 INSTRUCTION_IF: IF . PARENTOUVR TEST PARENTFERM CONSEQUENCE ELSE CONSEQUENCE
   25               | IF . PARENTOUVR TEST PARENTFERM CONSEQUENCE

    PARENTOUVR  shift, and go to state 69


State 52

   20 INSTRUCTION: WHILE . PARENTOUVR TEST PARENTFERM CONSEQUENCE

    PARENTOUVR  shift, and go to state 70


State 53

   22 INSTRUCTION: NEW . NOM PARENTOUVR DATALISTE PARENTFERM PTVIRG

    NOM  shift, and go to state 71


State 54

    5 PROGRAMME: PROGRAMME BEGINKEY ACCOUVR DECLARATION_VAR_LISTE INSTRUCTION_LISTE ACCFERM . END

    END  shift, and go to state 72


State 55

   18 INSTRUCTION_LISTE: INSTRUCTION_LISTE INSTRUCTION .

    $default  reduce using rule 18 (INSTRUCTION_LISTE)


State 56

   21 INSTRUCTION: INSTRUCTION_IF .

    $default  reduce using rule 21 (INSTRUCTION)


State 57

   19 INSTRUCTION: AFFECTATION .

    $default  reduce using rule 19 (INSTRUCTION)


State 58

   23 INSTRUCTION: VARIABLE . EGAL NEW NOM PARENTOUVR DATALISTE PARENTFERM PTVIRG
   27 AFFECTATION: VARIABLE . EGAL DATA PTVIRG

    EGAL  shift, and go to state 73


State 59

    9 DECLARATION_VAR_LISTE: DECLARATION_VAR_LISTE . DECLARATION_VAR
   11 DECLARATION_CLASSE: CLASSE NOM COMPOUND ACCOUVR DECLARATION_VAR_LISTE . DEFINITION_CLASSE ACCFERM

    VAR  shift, and go to state 4

    $default  reduce using rule 67 (VIDE)

    DECLARATION_VAR    go to state 35
    DEFINITION_CLASSE  go to state 74
    VIDE               go to state 75


State 60

   10 DECLARATION_CLASSE: CLASSE NOM EXTENDS NOM ACCOUVR . AFFECTATION_CLASSE_LISTE ACCFERM

    $default  reduce using rule 67 (VIDE)

    AFFECTATION_CLASSE_LISTE  go to state 76
    VIDE                      go to state 77


State 61

   36 OPERATION: DATA . PLUS DATA
   37          | DATA . MOINS DATA
   38          | DATA . MULT DATA
   39          | DATA . DIV DATA
   40          | DATA . MOD DATA
   41          | ABS PARENTOUVR DATA . PARENTFERM

    PLUS        shift, and go to state 43
    MOINS       shift, and go to state 44
    MULT        shift, and go to state 45
    DIV         shift, and go to state 46
    MOD         shift, and go to state 47
    PARENTFERM  shift, and go to state 78


State 62

   32 DATA: PARENTOUVR DATA PARENTFERM .

    $default  reduce using rule 32 (DATA)


State 63

   36 OPERATION: DATA . PLUS DATA
   36          | DATA PLUS DATA .
   37          | DATA . MOINS DATA
   38          | DATA . MULT DATA
   39          | DATA . DIV DATA
   40          | DATA . MOD DATA

    MULT  shift, and go to state 45
    DIV   shift, and go to state 46
    MOD   shift, and go to state 47

    $default  reduce using rule 36 (OPERATION)


State 64

   36 OPERATION: DATA . PLUS DATA
   37          | DATA . MOINS DATA
   37          | DATA MOINS DATA .
   38          | DATA . MULT DATA
   39          | DATA . DIV DATA
   40          | DATA . MOD DATA

    MULT  shift, and go to state 45
    DIV   shift, and go to state 46
    MOD   shift, and go to state 47

    $default  reduce using rule 37 (OPERATION)


State 65

   36 OPERATION: DATA . PLUS DATA
   37          | DATA . MOINS DATA
   38          | DATA . MULT DATA
   38          | DATA MULT DATA .
   39          | DATA . DIV DATA
   40          | DATA . MOD DATA

    $default  reduce using rule 38 (OPERATION)


State 66

   36 OPERATION: DATA . PLUS DATA
   37          | DATA . MOINS DATA
   38          | DATA . MULT DATA
   39          | DATA . DIV DATA
   39          | DATA DIV DATA .
   40          | DATA . MOD DATA

    $default  reduce using rule 39 (OPERATION)


State 67

   36 OPERATION: DATA . PLUS DATA
   37          | DATA . MOINS DATA
   38          | DATA . MULT DATA
   39          | DATA . DIV DATA
   40          | DATA . MOD DATA
   40          | DATA MOD DATA .

    $default  reduce using rule 40 (OPERATION)


State 68

   28 AFFECTATION: NOM POINT . NOM EGAL DATA PTVIRG

    NOM  shift, and go to state 79


State 69

   24 INSTRUCTION_IF: IF PARENTOUVR . TEST PARENTFERM CONSEQUENCE ELSE CONSEQUENCE
   25               | IF PARENTOUVR . TEST PARENTFERM CONSEQUENCE

    ENTIER      shift, and go to state 22
    REEL        shift, and go to state 23
    NOM         shift, and go to state 10
    CHAINE      shift, and go to state 24
    TRUE        shift, and go to state 80
    FALSE       shift, and go to state 81
    NOT         shift, and go to state 82
    MOINS       shift, and go to state 27
    ABS         shift, and go to state 28
    PARENTOUVR  shift, and go to state 83

    DATA         go to state 84
    OPERATION    go to state 31
    TEST         go to state 85
    COMPARAISON  go to state 86
    VARIABLE     go to state 87
    NOMBRE       go to state 33


State 70

   20 INSTRUCTION: WHILE PARENTOUVR . TEST PARENTFERM CONSEQUENCE

    ENTIER      shift, and go to state 22
    REEL        shift, and go to state 23
    NOM         shift, and go to state 10
    CHAINE      shift, and go to state 24
    TRUE        shift, and go to state 80
    FALSE       shift, and go to state 81
    NOT         shift, and go to state 82
    MOINS       shift, and go to state 27
    ABS         shift, and go to state 28
    PARENTOUVR  shift, and go to state 83

    DATA         go to state 84
    OPERATION    go to state 31
    TEST         go to state 88
    COMPARAISON  go to state 86
    VARIABLE     go to state 87
    NOMBRE       go to state 33


State 71

   22 INSTRUCTION: NEW NOM . PARENTOUVR DATALISTE PARENTFERM PTVIRG

    PARENTOUVR  shift, and go to state 89


State 72

    5 PROGRAMME: PROGRAMME BEGINKEY ACCOUVR DECLARATION_VAR_LISTE INSTRUCTION_LISTE ACCFERM END .

    $default  reduce using rule 5 (PROGRAMME)


State 73

   23 INSTRUCTION: VARIABLE EGAL . NEW NOM PARENTOUVR DATALISTE PARENTFERM PTVIRG
   27 AFFECTATION: VARIABLE EGAL . DATA PTVIRG

    ENTIER      shift, and go to state 22
    REEL        shift, and go to state 23
    NOM         shift, and go to state 10
    CHAINE      shift, and go to state 24
    TRUE        shift, and go to state 25
    FALSE       shift, and go to state 26
    NEW         shift, and go to state 90
    MOINS       shift, and go to state 27
    ABS         shift, and go to state 28
    PARENTOUVR  shift, and go to state 29

    DATA       go to state 91
    OPERATION  go to state 31
    VARIABLE   go to state 32
    NOMBRE     go to state 33


State 74

   11 DECLARATION_CLASSE: CLASSE NOM COMPOUND ACCOUVR DECLARATION_VAR_LISTE DEFINITION_CLASSE . ACCFERM
   13 DEFINITION_CLASSE: DEFINITION_CLASSE . CONSTRUCTEUR

    CONSTRUCTOR  shift, and go to state 92
    ACCFERM      shift, and go to state 93

    CONSTRUCTEUR  go to state 94


State 75

   12 DEFINITION_CLASSE: VIDE .

    $default  reduce using rule 12 (DEFINITION_CLASSE)


State 76

   10 DECLARATION_CLASSE: CLASSE NOM EXTENDS NOM ACCOUVR AFFECTATION_CLASSE_LISTE . ACCFERM
   16 AFFECTATION_CLASSE_LISTE: AFFECTATION_CLASSE_LISTE . AFFECTATION

    NOM      shift, and go to state 50
    ACCFERM  shift, and go to state 95

    AFFECTATION  go to state 96
    VARIABLE     go to state 97


State 77

   15 AFFECTATION_CLASSE_LISTE: VIDE .

    $default  reduce using rule 15 (AFFECTATION_CLASSE_LISTE)


State 78

   41 OPERATION: ABS PARENTOUVR DATA PARENTFERM .

    $default  reduce using rule 41 (OPERATION)


State 79

   28 AFFECTATION: NOM POINT NOM . EGAL DATA PTVIRG

    EGAL  shift, and go to state 98


State 80

   34 DATA: TRUE .
   49 TEST: TRUE .

    AND         reduce using rule 49 (TEST)
    OR          reduce using rule 49 (TEST)
    PARENTFERM  reduce using rule 49 (TEST)
    $default    reduce using rule 34 (DATA)


State 81

   35 DATA: FALSE .
   48 TEST: FALSE .

    AND         reduce using rule 48 (TEST)
    OR          reduce using rule 48 (TEST)
    PARENTFERM  reduce using rule 48 (TEST)
    $default    reduce using rule 35 (DATA)


State 82

   47 TEST: NOT . TEST

    ENTIER      shift, and go to state 22
    REEL        shift, and go to state 23
    NOM         shift, and go to state 10
    CHAINE      shift, and go to state 24
    TRUE        shift, and go to state 80
    FALSE       shift, and go to state 81
    NOT         shift, and go to state 82
    MOINS       shift, and go to state 27
    ABS         shift, and go to state 28
    PARENTOUVR  shift, and go to state 83

    DATA         go to state 84
    OPERATION    go to state 31
    TEST         go to state 99
    COMPARAISON  go to state 86
    VARIABLE     go to state 87
    NOMBRE       go to state 33


State 83

   32 DATA: PARENTOUVR . DATA PARENTFERM
   44 TEST: PARENTOUVR . COMPARAISON PARENTFERM

    ENTIER      shift, and go to state 22
    REEL        shift, and go to state 23
    NOM         shift, and go to state 10
    CHAINE      shift, and go to state 24
    TRUE        shift, and go to state 25
    FALSE       shift, and go to state 26
    MOINS       shift, and go to state 27
    ABS         shift, and go to state 28
    PARENTOUVR  shift, and go to state 29

    DATA         go to state 100
    OPERATION    go to state 31
    COMPARAISON  go to state 101
    VARIABLE     go to state 32
    NOMBRE       go to state 33


State 84

   36 OPERATION: DATA . PLUS DATA
   37          | DATA . MOINS DATA
   38          | DATA . MULT DATA
   39          | DATA . DIV DATA
   40          | DATA . MOD DATA
   51 COMPARAISON: DATA . EGALEGAL DATA
   52            | DATA . SUP DATA
   53            | DATA . INF DATA
   54            | DATA . SUPEGAL DATA
   55            | DATA . INFEGAL DATA
   56            | DATA . DIFFERENT DATA

    PLUS       shift, and go to state 43
    MOINS      shift, and go to state 44
    MULT       shift, and go to state 45
    DIV        shift, and go to state 46
    MOD        shift, and go to state 47
    SUP        shift, and go to state 102
    INF        shift, and go to state 103
    SUPEGAL    shift, and go to state 104
    INFEGAL    shift, and go to state 105
    EGALEGAL   shift, and go to state 106
    DIFFERENT  shift, and go to state 107


State 85

   24 INSTRUCTION_IF: IF PARENTOUVR TEST . PARENTFERM CONSEQUENCE ELSE CONSEQUENCE
   25               | IF PARENTOUVR TEST . PARENTFERM CONSEQUENCE
   45 TEST: TEST . AND TEST
   46     | TEST . OR TEST

    AND         shift, and go to state 108
    OR          shift, and go to state 109
    PARENTFERM  shift, and go to state 110


State 86

   43 TEST: COMPARAISON .

    $default  reduce using rule 43 (TEST)


State 87

   29 DATA: VARIABLE .
   50 TEST: VARIABLE .

    AND         reduce using rule 50 (TEST)
    OR          reduce using rule 50 (TEST)
    PARENTFERM  reduce using rule 50 (TEST)
    $default    reduce using rule 29 (DATA)


State 88

   20 INSTRUCTION: WHILE PARENTOUVR TEST . PARENTFERM CONSEQUENCE
   45 TEST: TEST . AND TEST
   46     | TEST . OR TEST

    AND         shift, and go to state 108
    OR          shift, and go to state 109
    PARENTFERM  shift, and go to state 111


State 89

   22 INSTRUCTION: NEW NOM PARENTOUVR . DATALISTE PARENTFERM PTVIRG

    ENTIER      shift, and go to state 22
    REEL        shift, and go to state 23
    NOM         shift, and go to state 10
    CHAINE      shift, and go to state 24
    TRUE        shift, and go to state 25
    FALSE       shift, and go to state 26
    MOINS       shift, and go to state 27
    ABS         shift, and go to state 28
    PARENTOUVR  shift, and go to state 29

    $default  reduce using rule 67 (VIDE)

    DATA       go to state 112
    OPERATION  go to state 31
    VARIABLE   go to state 32
    DATALISTE  go to state 113
    NOMBRE     go to state 33
    VIDE       go to state 114


State 90

   23 INSTRUCTION: VARIABLE EGAL NEW . NOM PARENTOUVR DATALISTE PARENTFERM PTVIRG

    NOM  shift, and go to state 115


State 91

   27 AFFECTATION: VARIABLE EGAL DATA . PTVIRG
   36 OPERATION: DATA . PLUS DATA
   37          | DATA . MOINS DATA
   38          | DATA . MULT DATA
   39          | DATA . DIV DATA
   40          | DATA . MOD DATA

    PLUS    shift, and go to state 43
    MOINS   shift, and go to state 44
    MULT    shift, and go to state 45
    DIV     shift, and go to state 46
    MOD     shift, and go to state 47
    PTVIRG  shift, and go to state 116


State 92

   14 CONSTRUCTEUR: CONSTRUCTOR . PARENTOUVR NOMS PARENTFERM ACCOUVR DECLARATION_VAR_LISTE INSTRUCTION_LISTE ACCFERM

    PARENTOUVR  shift, and go to state 117


State 93

   11 DECLARATION_CLASSE: CLASSE NOM COMPOUND ACCOUVR DECLARATION_VAR_LISTE DEFINITION_CLASSE ACCFERM .

    $default  reduce using rule 11 (DECLARATION_CLASSE)


State 94

   13 DEFINITION_CLASSE: DEFINITION_CLASSE CONSTRUCTEUR .

    $default  reduce using rule 13 (DEFINITION_CLASSE)


State 95

   10 DECLARATION_CLASSE: CLASSE NOM EXTENDS NOM ACCOUVR AFFECTATION_CLASSE_LISTE ACCFERM .

    $default  reduce using rule 10 (DECLARATION_CLASSE)


State 96

   16 AFFECTATION_CLASSE_LISTE: AFFECTATION_CLASSE_LISTE AFFECTATION .

    $default  reduce using rule 16 (AFFECTATION_CLASSE_LISTE)


State 97

   27 AFFECTATION: VARIABLE . EGAL DATA PTVIRG

    EGAL  shift, and go to state 118


State 98

   28 AFFECTATION: NOM POINT NOM EGAL . DATA PTVIRG

    ENTIER      shift, and go to state 22
    REEL        shift, and go to state 23
    NOM         shift, and go to state 10
    CHAINE      shift, and go to state 24
    TRUE        shift, and go to state 25
    FALSE       shift, and go to state 26
    MOINS       shift, and go to state 27
    ABS         shift, and go to state 28
    PARENTOUVR  shift, and go to state 29

    DATA       go to state 119
    OPERATION  go to state 31
    VARIABLE   go to state 32
    NOMBRE     go to state 33


State 99

   45 TEST: TEST . AND TEST
   46     | TEST . OR TEST
   47     | NOT TEST .

    $default  reduce using rule 47 (TEST)


State 100

   32 DATA: PARENTOUVR DATA . PARENTFERM
   36 OPERATION: DATA . PLUS DATA
   37          | DATA . MOINS DATA
   38          | DATA . MULT DATA
   39          | DATA . DIV DATA
   40          | DATA . MOD DATA
   51 COMPARAISON: DATA . EGALEGAL DATA
   52            | DATA . SUP DATA
   53            | DATA . INF DATA
   54            | DATA . SUPEGAL DATA
   55            | DATA . INFEGAL DATA
   56            | DATA . DIFFERENT DATA

    PLUS        shift, and go to state 43
    MOINS       shift, and go to state 44
    MULT        shift, and go to state 45
    DIV         shift, and go to state 46
    MOD         shift, and go to state 47
    SUP         shift, and go to state 102
    INF         shift, and go to state 103
    SUPEGAL     shift, and go to state 104
    INFEGAL     shift, and go to state 105
    EGALEGAL    shift, and go to state 106
    DIFFERENT   shift, and go to state 107
    PARENTFERM  shift, and go to state 62


State 101

   44 TEST: PARENTOUVR COMPARAISON . PARENTFERM

    PARENTFERM  shift, and go to state 120


State 102

   52 COMPARAISON: DATA SUP . DATA

    ENTIER      shift, and go to state 22
    REEL        shift, and go to state 23
    NOM         shift, and go to state 10
    CHAINE      shift, and go to state 24
    TRUE        shift, and go to state 25
    FALSE       shift, and go to state 26
    MOINS       shift, and go to state 27
    ABS         shift, and go to state 28
    PARENTOUVR  shift, and go to state 29

    DATA       go to state 121
    OPERATION  go to state 31
    VARIABLE   go to state 32
    NOMBRE     go to state 33


State 103

   53 COMPARAISON: DATA INF . DATA

    ENTIER      shift, and go to state 22
    REEL        shift, and go to state 23
    NOM         shift, and go to state 10
    CHAINE      shift, and go to state 24
    TRUE        shift, and go to state 25
    FALSE       shift, and go to state 26
    MOINS       shift, and go to state 27
    ABS         shift, and go to state 28
    PARENTOUVR  shift, and go to state 29

    DATA       go to state 122
    OPERATION  go to state 31
    VARIABLE   go to state 32
    NOMBRE     go to state 33


State 104

   54 COMPARAISON: DATA SUPEGAL . DATA

    ENTIER      shift, and go to state 22
    REEL        shift, and go to state 23
    NOM         shift, and go to state 10
    CHAINE      shift, and go to state 24
    TRUE        shift, and go to state 25
    FALSE       shift, and go to state 26
    MOINS       shift, and go to state 27
    ABS         shift, and go to state 28
    PARENTOUVR  shift, and go to state 29

    DATA       go to state 123
    OPERATION  go to state 31
    VARIABLE   go to state 32
    NOMBRE     go to state 33


State 105

   55 COMPARAISON: DATA INFEGAL . DATA

    ENTIER      shift, and go to state 22
    REEL        shift, and go to state 23
    NOM         shift, and go to state 10
    CHAINE      shift, and go to state 24
    TRUE        shift, and go to state 25
    FALSE       shift, and go to state 26
    MOINS       shift, and go to state 27
    ABS         shift, and go to state 28
    PARENTOUVR  shift, and go to state 29

    DATA       go to state 124
    OPERATION  go to state 31
    VARIABLE   go to state 32
    NOMBRE     go to state 33


State 106

   51 COMPARAISON: DATA EGALEGAL . DATA

    ENTIER      shift, and go to state 22
    REEL        shift, and go to state 23
    NOM         shift, and go to state 10
    CHAINE      shift, and go to state 24
    TRUE        shift, and go to state 25
    FALSE       shift, and go to state 26
    MOINS       shift, and go to state 27
    ABS         shift, and go to state 28
    PARENTOUVR  shift, and go to state 29

    DATA       go to state 125
    OPERATION  go to state 31
    VARIABLE   go to state 32
    NOMBRE     go to state 33


State 107

   56 COMPARAISON: DATA DIFFERENT . DATA

    ENTIER      shift, and go to state 22
    REEL        shift, and go to state 23
    NOM         shift, and go to state 10
    CHAINE      shift, and go to state 24
    TRUE        shift, and go to state 25
    FALSE       shift, and go to state 26
    MOINS       shift, and go to state 27
    ABS         shift, and go to state 28
    PARENTOUVR  shift, and go to state 29

    DATA       go to state 126
    OPERATION  go to state 31
    VARIABLE   go to state 32
    NOMBRE     go to state 33


State 108

   45 TEST: TEST AND . TEST

    ENTIER      shift, and go to state 22
    REEL        shift, and go to state 23
    NOM         shift, and go to state 10
    CHAINE      shift, and go to state 24
    TRUE        shift, and go to state 80
    FALSE       shift, and go to state 81
    NOT         shift, and go to state 82
    MOINS       shift, and go to state 27
    ABS         shift, and go to state 28
    PARENTOUVR  shift, and go to state 83

    DATA         go to state 84
    OPERATION    go to state 31
    TEST         go to state 127
    COMPARAISON  go to state 86
    VARIABLE     go to state 87
    NOMBRE       go to state 33


State 109

   46 TEST: TEST OR . TEST

    ENTIER      shift, and go to state 22
    REEL        shift, and go to state 23
    NOM         shift, and go to state 10
    CHAINE      shift, and go to state 24
    TRUE        shift, and go to state 80
    FALSE       shift, and go to state 81
    NOT         shift, and go to state 82
    MOINS       shift, and go to state 27
    ABS         shift, and go to state 28
    PARENTOUVR  shift, and go to state 83

    DATA         go to state 84
    OPERATION    go to state 31
    TEST         go to state 128
    COMPARAISON  go to state 86
    VARIABLE     go to state 87
    NOMBRE       go to state 33


State 110

   24 INSTRUCTION_IF: IF PARENTOUVR TEST PARENTFERM . CONSEQUENCE ELSE CONSEQUENCE
   25               | IF PARENTOUVR TEST PARENTFERM . CONSEQUENCE

    ACCOUVR  shift, and go to state 129

    CONSEQUENCE  go to state 130


State 111

   20 INSTRUCTION: WHILE PARENTOUVR TEST PARENTFERM . CONSEQUENCE

    ACCOUVR  shift, and go to state 129

    CONSEQUENCE  go to state 131


State 112

   36 OPERATION: DATA . PLUS DATA
   37          | DATA . MOINS DATA
   38          | DATA . MULT DATA
   39          | DATA . DIV DATA
   40          | DATA . MOD DATA
   63 DATALISTE: DATA .

    PLUS   shift, and go to state 43
    MOINS  shift, and go to state 44
    MULT   shift, and go to state 45
    DIV    shift, and go to state 46
    MOD    shift, and go to state 47

    $default  reduce using rule 63 (DATALISTE)


State 113

   22 INSTRUCTION: NEW NOM PARENTOUVR DATALISTE . PARENTFERM PTVIRG
   64 DATALISTE: DATALISTE . VIRGULE DATA

    PARENTFERM  shift, and go to state 132
    VIRGULE     shift, and go to state 133


State 114

   62 DATALISTE: VIDE .

    $default  reduce using rule 62 (DATALISTE)


State 115

   23 INSTRUCTION: VARIABLE EGAL NEW NOM . PARENTOUVR DATALISTE PARENTFERM PTVIRG

    PARENTOUVR  shift, and go to state 134


State 116

   27 AFFECTATION: VARIABLE EGAL DATA PTVIRG .

    $default  reduce using rule 27 (AFFECTATION)


State 117

   14 CONSTRUCTEUR: CONSTRUCTOR PARENTOUVR . NOMS PARENTFERM ACCOUVR DECLARATION_VAR_LISTE INSTRUCTION_LISTE ACCFERM

    NOM  shift, and go to state 135

    $default  reduce using rule 67 (VIDE)

    NOMS  go to state 136
    VIDE  go to state 137


State 118

   27 AFFECTATION: VARIABLE EGAL . DATA PTVIRG

    ENTIER      shift, and go to state 22
    REEL        shift, and go to state 23
    NOM         shift, and go to state 10
    CHAINE      shift, and go to state 24
    TRUE        shift, and go to state 25
    FALSE       shift, and go to state 26
    MOINS       shift, and go to state 27
    ABS         shift, and go to state 28
    PARENTOUVR  shift, and go to state 29

    DATA       go to state 91
    OPERATION  go to state 31
    VARIABLE   go to state 32
    NOMBRE     go to state 33


State 119

   28 AFFECTATION: NOM POINT NOM EGAL DATA . PTVIRG
   36 OPERATION: DATA . PLUS DATA
   37          | DATA . MOINS DATA
   38          | DATA . MULT DATA
   39          | DATA . DIV DATA
   40          | DATA . MOD DATA

    PLUS    shift, and go to state 43
    MOINS   shift, and go to state 44
    MULT    shift, and go to state 45
    DIV     shift, and go to state 46
    MOD     shift, and go to state 47
    PTVIRG  shift, and go to state 138


State 120

   44 TEST: PARENTOUVR COMPARAISON PARENTFERM .

    $default  reduce using rule 44 (TEST)


State 121

   36 OPERATION: DATA . PLUS DATA
   37          | DATA . MOINS DATA
   38          | DATA . MULT DATA
   39          | DATA . DIV DATA
   40          | DATA . MOD DATA
   52 COMPARAISON: DATA SUP DATA .

    PLUS   shift, and go to state 43
    MOINS  shift, and go to state 44
    MULT   shift, and go to state 45
    DIV    shift, and go to state 46
    MOD    shift, and go to state 47

    $default  reduce using rule 52 (COMPARAISON)


State 122

   36 OPERATION: DATA . PLUS DATA
   37          | DATA . MOINS DATA
   38          | DATA . MULT DATA
   39          | DATA . DIV DATA
   40          | DATA . MOD DATA
   53 COMPARAISON: DATA INF DATA .

    PLUS   shift, and go to state 43
    MOINS  shift, and go to state 44
    MULT   shift, and go to state 45
    DIV    shift, and go to state 46
    MOD    shift, and go to state 47

    $default  reduce using rule 53 (COMPARAISON)


State 123

   36 OPERATION: DATA . PLUS DATA
   37          | DATA . MOINS DATA
   38          | DATA . MULT DATA
   39          | DATA . DIV DATA
   40          | DATA . MOD DATA
   54 COMPARAISON: DATA SUPEGAL DATA .

    PLUS   shift, and go to state 43
    MOINS  shift, and go to state 44
    MULT   shift, and go to state 45
    DIV    shift, and go to state 46
    MOD    shift, and go to state 47

    $default  reduce using rule 54 (COMPARAISON)


State 124

   36 OPERATION: DATA . PLUS DATA
   37          | DATA . MOINS DATA
   38          | DATA . MULT DATA
   39          | DATA . DIV DATA
   40          | DATA . MOD DATA
   55 COMPARAISON: DATA INFEGAL DATA .

    PLUS   shift, and go to state 43
    MOINS  shift, and go to state 44
    MULT   shift, and go to state 45
    DIV    shift, and go to state 46
    MOD    shift, and go to state 47

    $default  reduce using rule 55 (COMPARAISON)


State 125

   36 OPERATION: DATA . PLUS DATA
   37          | DATA . MOINS DATA
   38          | DATA . MULT DATA
   39          | DATA . DIV DATA
   40          | DATA . MOD DATA
   51 COMPARAISON: DATA EGALEGAL DATA .

    PLUS   shift, and go to state 43
    MOINS  shift, and go to state 44
    MULT   shift, and go to state 45
    DIV    shift, and go to state 46
    MOD    shift, and go to state 47

    $default  reduce using rule 51 (COMPARAISON)


State 126

   36 OPERATION: DATA . PLUS DATA
   37          | DATA . MOINS DATA
   38          | DATA . MULT DATA
   39          | DATA . DIV DATA
   40          | DATA . MOD DATA
   56 COMPARAISON: DATA DIFFERENT DATA .

    PLUS   shift, and go to state 43
    MOINS  shift, and go to state 44
    MULT   shift, and go to state 45
    DIV    shift, and go to state 46
    MOD    shift, and go to state 47

    $default  reduce using rule 56 (COMPARAISON)


State 127

   45 TEST: TEST . AND TEST
   45     | TEST AND TEST .
   46     | TEST . OR TEST

    $default  reduce using rule 45 (TEST)


State 128

   45 TEST: TEST . AND TEST
   46     | TEST . OR TEST
   46     | TEST OR TEST .

    $default  reduce using rule 46 (TEST)


State 129

   26 CONSEQUENCE: ACCOUVR . INSTRUCTION_LISTE ACCFERM

    $default  reduce using rule 67 (VIDE)

    INSTRUCTION_LISTE  go to state 139
    VIDE               go to state 37


State 130

   24 INSTRUCTION_IF: IF PARENTOUVR TEST PARENTFERM CONSEQUENCE . ELSE CONSEQUENCE
   25               | IF PARENTOUVR TEST PARENTFERM CONSEQUENCE .

    ELSE  shift, and go to state 140

    $default  reduce using rule 25 (INSTRUCTION_IF)


State 131

   20 INSTRUCTION: WHILE PARENTOUVR TEST PARENTFERM CONSEQUENCE .

    $default  reduce using rule 20 (INSTRUCTION)


State 132

   22 INSTRUCTION: NEW NOM PARENTOUVR DATALISTE PARENTFERM . PTVIRG

    PTVIRG  shift, and go to state 141


State 133

   64 DATALISTE: DATALISTE VIRGULE . DATA

    ENTIER      shift, and go to state 22
    REEL        shift, and go to state 23
    NOM         shift, and go to state 10
    CHAINE      shift, and go to state 24
    TRUE        shift, and go to state 25
    FALSE       shift, and go to state 26
    MOINS       shift, and go to state 27
    ABS         shift, and go to state 28
    PARENTOUVR  shift, and go to state 29

    DATA       go to state 142
    OPERATION  go to state 31
    VARIABLE   go to state 32
    NOMBRE     go to state 33


State 134

   23 INSTRUCTION: VARIABLE EGAL NEW NOM PARENTOUVR . DATALISTE PARENTFERM PTVIRG

    ENTIER      shift, and go to state 22
    REEL        shift, and go to state 23
    NOM         shift, and go to state 10
    CHAINE      shift, and go to state 24
    TRUE        shift, and go to state 25
    FALSE       shift, and go to state 26
    MOINS       shift, and go to state 27
    ABS         shift, and go to state 28
    PARENTOUVR  shift, and go to state 29

    $default  reduce using rule 67 (VIDE)

    DATA       go to state 112
    OPERATION  go to state 31
    VARIABLE   go to state 32
    DATALISTE  go to state 143
    NOMBRE     go to state 33
    VIDE       go to state 114


State 135

   60 NOMS: NOM .

    $default  reduce using rule 60 (NOMS)


State 136

   14 CONSTRUCTEUR: CONSTRUCTOR PARENTOUVR NOMS . PARENTFERM ACCOUVR DECLARATION_VAR_LISTE INSTRUCTION_LISTE ACCFERM
   61 NOMS: NOMS . VIRGULE NOM

    PARENTFERM  shift, and go to state 144
    VIRGULE     shift, and go to state 145


State 137

   59 NOMS: VIDE .

    $default  reduce using rule 59 (NOMS)


State 138

   28 AFFECTATION: NOM POINT NOM EGAL DATA PTVIRG .

    $default  reduce using rule 28 (AFFECTATION)


State 139

   18 INSTRUCTION_LISTE: INSTRUCTION_LISTE . INSTRUCTION
   26 CONSEQUENCE: ACCOUVR INSTRUCTION_LISTE . ACCFERM

    NOM      shift, and go to state 50
    IF       shift, and go to state 51
    WHILE    shift, and go to state 52
    NEW      shift, and go to state 53
    ACCFERM  shift, and go to state 146

    INSTRUCTION     go to state 55
    INSTRUCTION_IF  go to state 56
    AFFECTATION     go to state 57
    VARIABLE        go to state 58


State 140

   24 INSTRUCTION_IF: IF PARENTOUVR TEST PARENTFERM CONSEQUENCE ELSE . CONSEQUENCE

    ACCOUVR  shift, and go to state 129

    CONSEQUENCE  go to state 147


State 141

   22 INSTRUCTION: NEW NOM PARENTOUVR DATALISTE PARENTFERM PTVIRG .

    $default  reduce using rule 22 (INSTRUCTION)


State 142

   36 OPERATION: DATA . PLUS DATA
   37          | DATA . MOINS DATA
   38          | DATA . MULT DATA
   39          | DATA . DIV DATA
   40          | DATA . MOD DATA
   64 DATALISTE: DATALISTE VIRGULE DATA .

    PLUS   shift, and go to state 43
    MOINS  shift, and go to state 44
    MULT   shift, and go to state 45
    DIV    shift, and go to state 46
    MOD    shift, and go to state 47

    $default  reduce using rule 64 (DATALISTE)


State 143

   23 INSTRUCTION: VARIABLE EGAL NEW NOM PARENTOUVR DATALISTE . PARENTFERM PTVIRG
   64 DATALISTE: DATALISTE . VIRGULE DATA

    PARENTFERM  shift, and go to state 148
    VIRGULE     shift, and go to state 133


State 144

   14 CONSTRUCTEUR: CONSTRUCTOR PARENTOUVR NOMS PARENTFERM . ACCOUVR DECLARATION_VAR_LISTE INSTRUCTION_LISTE ACCFERM

    ACCOUVR  shift, and go to state 149


State 145

   61 NOMS: NOMS VIRGULE . NOM

    NOM  shift, and go to state 150


State 146

   26 CONSEQUENCE: ACCOUVR INSTRUCTION_LISTE ACCFERM .

    $default  reduce using rule 26 (CONSEQUENCE)


State 147

   24 INSTRUCTION_IF: IF PARENTOUVR TEST PARENTFERM CONSEQUENCE ELSE CONSEQUENCE .

    $default  reduce using rule 24 (INSTRUCTION_IF)


State 148

   23 INSTRUCTION: VARIABLE EGAL NEW NOM PARENTOUVR DATALISTE PARENTFERM . PTVIRG

    PTVIRG  shift, and go to state 151


State 149

   14 CONSTRUCTEUR: CONSTRUCTOR PARENTOUVR NOMS PARENTFERM ACCOUVR . DECLARATION_VAR_LISTE INSTRUCTION_LISTE ACCFERM

    $default  reduce using rule 67 (VIDE)

    DECLARATION_VAR_LISTE  go to state 152
    VIDE                   go to state 19


State 150

   61 NOMS: NOMS VIRGULE NOM .

    $default  reduce using rule 61 (NOMS)


State 151

   23 INSTRUCTION: VARIABLE EGAL NEW NOM PARENTOUVR DATALISTE PARENTFERM PTVIRG .

    $default  reduce using rule 23 (INSTRUCTION)


State 152

    9 DECLARATION_VAR_LISTE: DECLARATION_VAR_LISTE . DECLARATION_VAR
   14 CONSTRUCTEUR: CONSTRUCTOR PARENTOUVR NOMS PARENTFERM ACCOUVR DECLARATION_VAR_LISTE . INSTRUCTION_LISTE ACCFERM

    VAR  shift, and go to state 4

    $default  reduce using rule 67 (VIDE)

    DECLARATION_VAR    go to state 35
    INSTRUCTION_LISTE  go to state 153
    VIDE               go to state 37


State 153

   14 CONSTRUCTEUR: CONSTRUCTOR PARENTOUVR NOMS PARENTFERM ACCOUVR DECLARATION_VAR_LISTE INSTRUCTION_LISTE . ACCFERM
   18 INSTRUCTION_LISTE: INSTRUCTION_LISTE . INSTRUCTION

    NOM      shift, and go to state 50
    IF       shift, and go to state 51
    WHILE    shift, and go to state 52
    NEW      shift, and go to state 53
    ACCFERM  shift, and go to state 154

    INSTRUCTION     go to state 55
    INSTRUCTION_IF  go to state 56
    AFFECTATION     go to state 57
    VARIABLE        go to state 58


State 154

   14 CONSTRUCTEUR: CONSTRUCTOR PARENTOUVR NOMS PARENTFERM ACCOUVR DECLARATION_VAR_LISTE INSTRUCTION_LISTE ACCFERM .

    $default  reduce using rule 14 (CONSTRUCTEUR)
